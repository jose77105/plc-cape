/**
 * @file
 * @brief	AFE031 commands
 *
 * @cond COPYRIGHT_NOTES @copyright
 *	Copyright (C) 2017 Jose Maria Ortega\n
 *	Distributed under the GNU GPLv3. For full terms see the file LICENSE
 * @endcond
 */

#ifndef AFE_COMMANDS_H
#define AFE_COMMANDS_H


// AFE Registers
#define AFEREG_ENABLE1 0x1
#define AFEREG_ENABLE2 0x3
#define AFEREG_GAIN_SELECT 0x2
#define AFEREG_CONTROL1 0x4
#define AFEREG_CONTROL2 0x5
#define AFEREG_RESET 0x9
#define AFEREG_REVISION 0xB
#define AFEREG_REVISION_EXPECTED 0x2

// AFEREG_ENABLE1
#define AFEREG_ENABLE1_PA 0x1
#define AFEREG_ENABLE1_TX 0x2
#define AFEREG_ENABLE1_RX 0x4
#define AFEREG_ENABLE1_DAC 0x20

// AFEREG_ENABLE2
#define AFEREG_ENABLE2_ZERO_CROSSING 0x1
// REF1 provides a PA_VS/2 voltage used for the PA
#define AFEREG_ENABLE2_REF1 0x2
// REF2 provides an AVDD/2 voltage used for the Tx PGA, TxFilter, Rx PGA1, Rx Filter, and Rx PGA2
#define AFEREG_ENABLE2_REF2 0x4
#define AFEREG_ENABLE2_PA_OUT 0x8

// AFEREG_CONTROL1
#define AFEREG_CONTROL1_CALIB_MASK 0x7
#define AFEREG_CONTROL1_CALIB_TX 0x1
#define AFEREG_CONTROL1_CALIB_RX 0x2
#define AFEREG_CONTROL1_CALIB_TX_PGA 0x4
#define AFEREG_CONTROL1_CA_CBCD 0x8

// AFEREG_CONTROL2
#define AFEREG_CONTROL2_THERMAL_OVERLOAD 0x20
#define AFEREG_CONTROL2_CURRENT_OVERLOAD 0x40
#define AFEREG_CONTROL2_ENABLE_OVERLOADS_AND 0x7F
#define AFEREG_CONTROL2_ENABLE_OVERLOADS_OR \
		(AFEREG_CONTROL2_CURRENT_OVERLOAD | AFEREG_CONTROL2_THERMAL_OVERLOAD)

// AFEREG_GAIN_SELECT
#define AFEREG_GAIN_SELECT_RX_PGA1_MASK 0x3
extern const uint8_t AFEREG_GAIN_SELECT_RX_PGA1[4];

#define AFEREG_GAIN_SELECT_RX_PGA2_MASK 0xC
extern const uint8_t AFEREG_GAIN_SELECT_RX_PGA2[4];

#define AFEREG_GAIN_SELECT_TX_PGA_MASK 0x30
extern const uint8_t AFEREG_GAIN_SELECT_TX_PGA[4];

// AFEREG_RESET
#define AFEREG_RESET_SOFTRESET 0x14
#define AFEREG_RESET_CLEAR_OVERLOADS_MASK 0x9F

#endif /* AFE_COMMANDS_H */
